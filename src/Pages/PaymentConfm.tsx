import { Button, Modal, Radio, Space } from "antd";
import { useMemo, useState } from "react";
import { Helmet } from "react-helmet";
import { BsBank2, BsCashStack } from "react-icons/bs";
import { CiCreditCard2 } from "react-icons/ci";
import { FaGooglePay } from "react-icons/fa";
import { IoWalletOutline } from "react-icons/io5";
import { useQuery } from "react-query";
import AddAddressModal from "../Components/AddAddressModal/AddAddressModal";
import { Footer } from "../Components/Footer/Footer";
import { Header } from "../Components/Header/Header";
import { getOneProduct, getProducts, getUserAddress } from "../utils/apis";
import { useLocation } from "react-router-dom";

const PaymentConfm = () => {
  const [addressModalOpen, setAddressModalOpen] = useState(false);
  const [address, setAddress] = useState<any>();

  const location = useLocation();
  const queryParams = new URLSearchParams(location.search);
  const prod = queryParams.get("prod");
  const qnt = queryParams.get("qnt");
  // console.log({prod, qnt});

  const { data: prodData, isLoading } = useQuery("getprodData", () =>
    getOneProduct(prod)
  );

  const { data: addressData } = useQuery("getuserdelivery", getUserAddress);

  useMemo(() => {
    setAddress(addressData?.data[0]);
  }, [addressData]);

  const findDescPerc = (price: any, discPerc: any) => {
    const discountAmount = (parseInt(price) * parseInt(discPerc)) / 100;
    const finalPrice = price - discountAmount;
    return finalPrice;
  };

  const findTotal = (qnt: any, prod: any) => {
    const lastPice = findDescPerc(prod?.price, prod?.discount_percent);
    const total = lastPice * qnt;

    return total.toFixed(2).toString();
  };

  const findSaved = (prod: any, qnt: any) => {
    const totalPrice = findTotal(qnt, prod);
    const originalPrice = prod?.price * qnt;
    const saved = originalPrice - parseInt(totalPrice);

    return saved.toFixed(2);
  };

  return (
    <div className="w-full h-screen">
      <Helmet>
        <title>My Cart</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/fursanFavIcon.svg" />
      </Helmet>
      <Header />
      <div className="w-full h-full ">
        <div className="flex flex-col md:flex-row gap-10 md:gap-2 px-7 md:px-[7%] lg:px-[15%] py-10">
          {/* left side */}
          <div className="md:w-2/3 flex flex-col gap-5">
            {/* user */}
            {/* <div className="flex justify-between p-5 border my-1">
              <div>
                <h3 className="font-bold">User</h3>
                <div className="flex gap-2 flex-wrap">
                  <p>Niyad</p>
                  <p>+91 7356401623</p>
                </div>
              </div>
              <div>
                <Button>Change</Button>
              </div>
            </div> */}
            {/* address */}
            <div className=" flex justify-between p-5 border my-1">
              <div>
                <h3 className="font-bold pb-3">Address</h3>
                {address ? (
                  <p>
                    {address?.fullName}, {address?.phone}, {address?.address},{" "}
                    {address?.state}, {address?.city}, {address?.pincode}{" "}
                  </p>
                ) : (
                  <p>Please add you delivery address</p>
                )}
              </div>
              <div>
                <Button onClick={() => setAddressModalOpen(true)}>
                  Change
                </Button>
              </div>
            </div>
            {/* product */}
            <div className="border my-1">
              <div className="p-2 font-bold bg-amber-400">ORDER SUMMARY</div>
              <div className="flex justify-evenly items-center p-5">
                <img
                  src={prodData?.data?.product?.images[0]?.url}
                  alt="img"
                  className="w-28 h-28"
                />
                <div className="text-left">
                  <h2 className="font-semibold">
                    {prodData?.data.product.name}
                  </h2>
                  <p className="py-2   ">
                    {prodData?.data?.product?.description}
                  </p>
                  <p className="py-2">
                    quantity <span className="font-semibold ">{qnt}</span>
                  </p>
                  <div className="flex gap-1 flex-wrap">
                    <p className="text-slate-400 line-through">
                      {prodData?.data.product.price}
                    </p>
                    <h4 className="font-semibold">
                      {findDescPerc(
                        prodData?.data.product.price,
                        prodData?.data.product.discount_percent
                      )}
                    </h4>
                    <p className="text-xs text-green-500 align-bottom ">
                      {prodData?.data.product.discount_percent}% off with
                      special offer
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
          {/* right side */}
          <div className="md:w-1/3 flex flex-col gap-5">
            {/* price details */}
            <div className="border my-1">
              <div className="p-2 font-bold bg-amber-400">PRICE DETAILS</div>
              <table className="border-separate border-spacing-y-5 border-spacing-x-3 w-full">
                <tr className="">
                  <td className="">Price ({qnt} item)</td>
                  <td className="">
                    {findTotal(qnt, prodData?.data?.product)}
                  </td>
                </tr>
                <tr>
                  <td colSpan={8} className="">
                    <hr />
                  </td>
                </tr>
                <tr>
                  <td className="">Delivery Charge</td>
                  <td className="text-green-500">Free</td>
                </tr>
                <tr>
                  <td colSpan={8} className="px-1">
                    <hr />
                  </td>
                </tr>
                <tr>
                  <td className="">Total Price</td>
                  <td className="font-semibold">
                    {findTotal(qnt, prodData?.data?.product)}
                  </td>
                </tr>
                <tr>
                  <div className="text-green-500">
                    You have saved upto{" "}
                    {findSaved(prodData?.data?.product, qnt)}
                  </div>
                </tr>
              </table>
            </div>
            {/* payment options  */}
            <div className="border my-1">
              <div className="p-2 font-bold bg-amber-400">PAYMENT OPTIONS</div>
              <div className="p-5">
                <Radio.Group defaultValue={"cashOnDelivery"}>
                  <Space direction="vertical">
                    <Radio value={"upi"} disabled>
                      <div className="flex gap-3 items-center">
                        <FaGooglePay size={25} />
                        <p className="font-semibold">UPI Transaction</p>
                      </div>
                    </Radio>
                    <hr />
                    <Radio value={"wallets"} disabled>
                      <div className="flex gap-2 items-center">
                        <IoWalletOutline size={20} />
                        <p className="font-semibold">Wallets</p>
                      </div>
                    </Radio>
                    <hr />
                    <Radio value={"cards"} disabled>
                      <div className="flex gap-2 items-center">
                        <CiCreditCard2 size={20} />
                        <p className="font-semibold">
                          Credit / Debit / ATM card
                        </p>
                      </div>
                    </Radio>
                    <hr />
                    <Radio value={"netBanking"} disabled>
                      <div className="flex gap-2 items-center">
                        <BsBank2 />
                        <p className="font-semibold">Net Banking</p>
                      </div>
                    </Radio>
                    <hr />
                    <Radio value={"cashOnDelivery"}>
                      <div className="flex gap-2 items-center">
                        <BsCashStack />
                        <p className="font-semibold">Cash on delivery</p>
                      </div>
                    </Radio>
                  </Space>
                </Radio.Group>
              </div>
            </div>
            {/* conform order button */}
            <div className="bg-amber-400 py-3 px-2 flex justify-between items-center">
              <p>For conform the Order</p>
              <Button className="h-12">Conform order</Button>
            </div>
          </div>
        </div>
        <Footer />
      </div>
      <Modal
        title="Address"
        open={addressModalOpen}
        footer={false}
        onCancel={() => setAddressModalOpen(false)}
      >
        <AddAddressModal
          setOpen={setAddressModalOpen}
          setAddress={setAddress}
        />
      </Modal>
    </div>
  );
};

export default PaymentConfm;
